import { useState } from 'react';
import Pagination from '@mui/material/Pagination';
import './Aplicacao.css';

export default function AplicacaoList({
  aplicacoes,
  clientes,
  medicamentos,
  onEdit,
  onDelete,
  onView,
  onAdd,
}) {
  const [paginaAtual, setPaginaAtual] = useState(1);
  const itensPorPagina = 5;

  const totalPaginas = Math.ceil(aplicacoes.length / itensPorPagina);
  const inicio = (paginaAtual - 1) * itensPorPagina;
  const fim = inicio + itensPorPagina;
  const aplicacoesPaginadas = aplicacoes.slice(inicio, fim);

  const getNomeCliente = (id) => {
    const cliente = clientes.find((c) => c.id === id);
    return cliente ? cliente.nome : '‚Äî';
  };

  const getNomeMedicamento = (id) => {
    const medicamento = medicamentos.find((m) => m.id === id);
    return medicamento ? medicamento.nome : '‚Äî';
  };

  return (
    <div className="aplicacao-list-container">
      <div className="aplicacao-header">
        <h2>Aplica√ß√µes</h2>
        <button className="novo-btn" onClick={onAdd}>+ Nova Aplica√ß√£o</button>
      </div>

      <div className="tabela-wrapper">
        <table className="tabela-aplicacoes">
          <thead>
            <tr>
              <th>Cliente</th>
              <th>Medicamento</th>
              <th>Dose Aplicada (ml)</th>
              <th>Valor Pago (R$)</th>
              <th>Data Aplica√ß√£o</th>
              <th>Qtd. Dispon√≠vel ap√≥s Aplica√ß√£o (ml)</th>
              <th>A√ß√µes</th>
            </tr>
          </thead>
          <tbody>
            {aplicacoesPaginadas.length === 0 ? (
              <tr>
                <td colSpan="7" style={{ textAlign: 'center' }}>
                  Nenhuma aplica√ß√£o registrada.
                </td>
              </tr>
            ) : (
              aplicacoesPaginadas.map((aplicacao) => (
                <tr key={aplicacao.id}>
                  <td>{getNomeCliente(aplicacao.clienteId)}</td>
                  <td>{getNomeMedicamento(aplicacao.medicamentoId)}</td>
                  <td>{aplicacao.dose}</td>
                  <td>{aplicacao.valorPago?.toFixed(2)}</td>
                  <td>{new Date(aplicacao.data).toLocaleDateString()}</td>
                  <td>{aplicacao.quantidadeDisponivelAposAplicacao}</td>
                  <td className="acoes">
                    <button title="Visualizar" onClick={() => onView(aplicacao)}>üîç</button>
                    <button title="Editar" onClick={() => onEdit(aplicacao)}>‚úèÔ∏è</button>
                    <button title="Excluir" onClick={() => onDelete(aplicacao.id)}>üóëÔ∏è</button>
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>

      {totalPaginas > 1 && (
        <div className="paginacao-mui">
          <Pagination
            count={totalPaginas}
            page={paginaAtual}
            onChange={(event, value) => setPaginaAtual(value)}
            color="primary"
            shape="rounded"
            showFirstButton
            showLastButton
          />
        </div>
      )}
    </div>
  );
}